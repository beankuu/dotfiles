[global]
    font = Monospace 14
    allow_markup = yes
    sort = yes
    indicate_hidden = yes
    alignment = left
    bounce_freq = 0
    idle_threshold = 60
    show_age_threshold = 30
    word_wrap = yes
    ignore_newline = no
    transparency = 0
    monitor = 0
    follow = keyboard
    sticky_history = yes
    line_height = 0
    separator_height = 2
    padding = 8
    horizontal_padding = 8
    separator_color = auto
    startup_notification = true
    dmenu = /usr/bin/dmenu -p dunst:
    browser = /usr/bin/firefox -new-tab

    # The format of the message. Possible variables are:
    #   %a  appname
    #   %s  summary
    #   %b  body
    #   %i  iconname (including its path)
    #   %I  iconname (without its path)
    #   %p  progress value if set ([  0%] to [100%]) or nothing
    # Markup is allowed
    format = "<b>%a</b>\n%s\n%b"

    # the geometry of the window
    # geometry [{width}]x{height}][+/-{x}+/-{y}]
    # The geometry of the message window.
    # The height is measured in number of notifications everything else in pixels. If the width
    # is omitted but the height is given ("-geometry x2"), the message window
    # expands over the whole screen (dmenu-like). If width is 0,
    # the window expands to the longest message displayed.
    # A positive x is measured from the left, a negative from the
    # right side of the screen.  Y is measured from the top and down respectevly.
    # The width can be negative. In this case the actual width is the
    # screen width minus the width defined in within the geometry option.
    geometry = "300x5-5+40"


[frame]
    width = 0
    color = "#222222"

[urgency_low]
    background = "#3F51B5"
    foreground = "#EEEEEE"
    timeout = 5

[urgency_normal]
    background = "#FF9800"
    foreground = "#EEEEEE"
    timeout = 5

[urgency_critical]
    background = "#F44336"
    foreground = "#EEEEEE"
    timeout = 0

[shortcuts]
    # shortcuts are specified as [modifier+][modifier+]...key
    # available modifiers are 'ctrl', 'mod1' (the alt-key), 'mod2', 'mod3'
    # and 'mod4' (windows-key)
    # xev might be helpful to find names for keys

    # close notification
    close = mod4+m

    # close all notifications
    close_all = mod4+shift+m

    # redisplay last message(s)
    history = mod4+n

    # context menu
    context = mod4+shift+i


# Every section that isn't one of the above is interpreted as a rules
# to override settings for certain messages.
# Messages can be matched by 'appname', 'summary', 'body' or 'icon'
# and you can override the 'timeout', 'urgency', 'foreground', 'background'
# and 'format'.
# Shell-like globbing will get expanded.
#
# SCRIPTING
# you can specify a script that gets run when the rule matches by setting
# the 'script' option.
# The script will be called as follows:
# script appname summary body icon urgency
# where urgency can be "LOW", "NORMAL" or "CRITICAL".
#
# NOTE: if you don't want a notification to be displayed, set the format to ""
# NOTE: It might be helpful to run dunst -print in a terminal in order to find
# fitting options for rules.

[ignore]
    summary = "startup"
    format = ""

[signed_on]
    summary = "*signed on*"
    urgency = low

[signed_off]
    summary = *signed off*
    urgency = low

[says]
    summary = *says*
    urgency = critical
    format  = "%s "%b""

[music]
    appname = cmus
    summary = "Now playing"
    urgency = low


